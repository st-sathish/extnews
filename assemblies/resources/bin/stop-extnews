#!/bin/bash
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# This is the default Karaf stop script modified for EXTNews to enable
# synchronous shutdown procedures.

DIRNAME=$(dirname "$0")
PROGNAME=$(basename "$0")

#
# Sourcing environment settings for karaf similar to tomcats setenv
#
KARAF_SCRIPT="stop-extnews"
export KARAF_SCRIPT
if [ -f "$DIRNAME/setenv" ]; then
  . "$DIRNAME/setenv"
fi

warn() {
    echo "${PROGNAME}: $*"
}

die() {
    warn "$*"
    exit 1
}

locateHome() {
    if [ "x$KARAF_HOME" != "x" ]; then
        warn "Ignoring predefined value for KARAF_HOME"
    fi

    # In POSIX shells, CDPATH may cause cd to write to stdout
    (unset CDPATH) >/dev/null 2>&1 && unset CDPATH

    KARAF_HOME=$(cd "$DIRNAME/.."; pwd)
    if [ ! -d "$KARAF_HOME" ]; then
        die "KARAF_HOME is not valid: $KARAF_HOME"
    fi
}

locateBase() {
    if [ "x$KARAF_BASE" != "x" ]; then
        if [ ! -d "$KARAF_BASE" ]; then
            die "KARAF_BASE is not valid: $KARAF_BASE"
        fi
    else
        KARAF_BASE=$KARAF_HOME
    fi
}

locateData() {
    if [ "x$KARAF_DATA" != "x" ]; then
        if [ ! -d "$KARAF_DATA" ]; then
            die "KARAF_DATA is not valid: $KARAF_DATA"
        fi
    else
        KARAF_DATA=$KARAF_BASE/data
    fi
}

locateEtc() {
    if [ "x$KARAF_ETC" != "x" ]; then
        if [ ! -d "$KARAF_ETC" ]; then
            die "KARAF_ETC is not valid: $KARAF_ETC"
        fi
    else
        KARAF_ETC=$KARAF_BASE/etc
    fi
}

init() {
    # Locate the Karaf home directory
    locateHome

    # Locate the Karaf base directory
    locateBase

    # Locate the Karaf data directory
    locateData

    # Locat the Karaf etc directory
    locateEtc
}

replace() {
    echo "$@" \
      | sed "s|\\\${karaf.base}|$KARAF_BASE|g" \
      | sed "s|\\\${karaf.data}|$KARAF_DATA|g" \
      | sed "s|\\\${karaf.etc}|$KARAF_ETC|g" \
      | sed "s|\\\${karaf.home}|$KARAF_HOME|g"
}

grepProperty() {
    grep "$@" "$KARAF_ETC"/*.properties | cut -d= -f2 | awk '{print $1}' | tail -n1
}

main() {
    init

    # Get shutdown command
    SHUTDOWN_CMD=$(grepProperty '^karaf.shutdown.command')
    if [ -z "${SHUTDOWN_CMD}" ]; then
        die "Error: Shutdown command not found"
    fi

    # Get shutdown port
    SHUTDOWN_PORT_FILE=$(replace "$(grepProperty '^karaf.shutdown.port.file')")
    if [ -z "${SHUTDOWN_PORT_FILE}" ]; then
        die "Error: Shutdown port file not configured"
    fi
    if [ ! -f "${SHUTDOWN_PORT_FILE}" ]; then
        die "Error: Port file configured but not found"
    fi

    # Get process id
    PID_FILE=$(replace "$(grepProperty '^karaf.pid.file')")
    if [ -n "${PID_FILE}" ]; then
        if [ ! -f "$PID_FILE" ]; then
            die "PID file configured but not found"
        fi

        # Send shutdown command to EXTNews
        echo "${SHUTDOWN_CMD}" | nc localhost $(cat "${SHUTDOWN_PORT_FILE}")
        while [ -d /proc/$(cat "${PID_FILE}") ]; do
            sleep 0.1;
        done
    else
        echo Could not find PID. Trying internal shutdown instead... >&2
        exec "${KARAF_HOME}"/bin/start-extnews stop "$@"
    fi
}

main "$@"
